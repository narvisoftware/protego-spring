<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>


  <groupId>app.narvi</groupId>
  <artifactId>protego-spring</artifactId>
  <version>0.10</version>

  <description>Basic implementation of protego-core.</description>
  <url>https://github.com/narvisoftware/protego-spring</url>

  <scm>
    <connection>scm:git:https://github.com/narvisoftware/protego-spring.git</connection>
    <developerConnection>scm:git:https://github.com/narvisoftware/protego-spring.git</developerConnection>
    <tag>protego-spring-0.10</tag>
    <url>https://github.com/narvisoftware/protego-spring/tree/main</url>
  </scm>

  <developers>
    <developer>
      <id>mvasilache@adobe.com</id>
      <name>Mihai Vasilache</name>
      <email>mihai.vasilache@narvi.ro</email>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>Europe/Bucharest</timezone>
    </developer>
  </developers>

  <properties>
    <maven.compiler.source>23</maven.compiler.source>
    <maven.compiler.target>23</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- jacoco -->
    <jacoco.version>0.8.12</jacoco.version>
    <jacoco.execution.data.reports.dir>
      ${project.build.directory}/coverage-reports
    </jacoco.execution.data.reports.dir>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.10.2</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>app.narvi</groupId>
      <artifactId>protego-core</artifactId>
      <version>0.10</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>2.0.12</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.5.0</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.5.0</version>
    </dependency>
    <!--spring-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>6.2.0</version>
    </dependency>
    <!--util frameworks-->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>33.3.1-jre</version>
    </dependency>
    <!--test-->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <additionalJOption>--enable-preview</additionalJOption>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <source>23</source>
          <target>23</target>
          <compilerArgs>--enable-preview</compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>

        <executions>
          <!--  Configuring jacoco unit test coverage data -->
          <execution>
            <id>pre-unit-test-execution</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.execution.data.reports.dir}/jacoco-ut.exec</destFile>
              <propertyName>surefire.jacoco.args</propertyName>
            </configuration>
          </execution>

          <!--  Generating the unit test coverage report  -->
          <execution>
            <id>post-unit-test-execution</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.execution.data.reports.dir}/jacoco-ut.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut-coverage-report</outputDirectory>
            </configuration>
          </execution>

          <!--  Configuring jacoco integration test coverage data  -->
          <execution>
            <id>pre-integration-test-execution</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.execution.data.reports.dir}/jacoco-it.exec</destFile>
              <propertyName>failsafe.jacoco.args</propertyName>
            </configuration>
          </execution>

          <!--  Generating the integration test coverage report  -->
          <execution>
            <id>post-integration-test-execution</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.execution.data.reports.dir}/jacoco-it.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-it-coverage-report</outputDirectory>
            </configuration>
          </execution>

          <!--  Merging unit and integration test coverage data  -->
          <execution>
            <id>merge-unit-it-test-data</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${jacoco.execution.data.reports.dir}</directory>
                  <includes>
                    <include>**/jacoco-*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <destFile>${jacoco.execution.data.reports.dir}/jacoco-merged.exec</destFile>
            </configuration>
          </execution>

          <!--  Generating the merged test coverage report  -->
          <execution>
            <id>create-merged-test-reports</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.execution.data.reports.dir}/jacoco-merged.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-merged-coverage-report</outputDirectory>
            </configuration>
          </execution>

          <!--  Verify jacoco merged test results coverage -->
          <execution>
            <id>check-merged-test-results</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.execution.data.reports.dir}/jacoco-merged.exec</dataFile>
              <rules>
                <rule>
                  <element>CLASS</element>
                  <excludes>
                    <include>*Test</include>
                    <exclude>*IT</exclude>
                  </excludes>
                </rule>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>INSTRUCTION</counter>
                      <value>MISSEDRATIO</value>
                      <maximum>1</maximum>
                    </limit>
                  </limits>
                </rule>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
              <haltOnFailure>true</haltOnFailure>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <!--  Configuring surefire to execute unit tests with jacoco   -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <argLine>${surefire.jacoco.args} --enable-preview</argLine>
          <trimStackTrace>false</trimStackTrace>
          <excludes>
            <exclude>**/*IT.java</exclude>
          </excludes>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <classesDirectory>${project.build.outputDirectory}</classesDirectory>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
      </plugin>

      <!--  Configuring failsafe to execute integration tests with jacoco   -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <!--          <reuseForks>false</reuseForks>-->
          <argLine>${failsafe.jacoco.args} --enable-preview</argLine>
          <trimStackTrace>false</trimStackTrace>
          <excludes>
            <exclude>**/*Test.java</exclude>
          </excludes>
          <includes>
            <include>**/*IT.java</include>
          </includes>
          <classesDirectory>${project.build.outputDirectory}</classesDirectory>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://opensource.org/license/mit</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

</project>